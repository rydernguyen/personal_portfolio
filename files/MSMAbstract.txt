This project looks into and compares different models in analyzing and predicting time series, specifically currency rates, highlighting the modeling of the returns of the Brazilian Real, Japanese Yen, Canadian Dollar and British Pound. One of the earliest models used to predict asset prices was the random walk model that assumes returns are normally distributed with a constant variance. There are many limitations to this model: the underestimation of the possibility of large price swings and the dismissal of volatility clustering. An improvement on the random walk model is the generalized autoregressive conditional heteroscedasticity model (GARCH) and the Markov-switching multifractal model (MSM) that are the focus of this paper.
Both GARCH and MSM are stochastic volatility models that take into account the changing volatilities from time to time, freeing up the models from the constraints of constant volatility and making them more adaptable to real world scenarios, and including important assumptions like price interdependency (also called long memory). Based on the original idea of using fractals in modeling time series by Benoit Mandelbrot, professors Laurent E. Calvet and Adlai J. Fisher incorporated the idea of using both Markov-chain and Multifractals to predict volatilities. MSM proves to be a better model than GARCH in a number of circumstances as shown by comparing the Maximum Likelihood Values, Tail Indices and the fit of the forecasts. The three models were used to analyze and forecast the mentioned currencies and their results were then compared.
Analysis was done through self-built Excel models, and parameters were gathered to project the data forward. With embedded VBA coding, the MSM model can be set up to accommodate a large amount of data (often requires 64-bit version of Excel) for cases of k=1 to k=10 though the computing power was limited to k=7 to get the estimated parameters. Specific to the MSM, k is the number of distinct components in a multifractal model and was proven by Calvet and Fisher to make the model perform at its best when k =10.
